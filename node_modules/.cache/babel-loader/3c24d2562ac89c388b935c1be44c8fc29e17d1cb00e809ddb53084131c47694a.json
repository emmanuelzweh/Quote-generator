{"ast":null,"code":"var _jsxFileName = \"/home/legend/Desktop/Projects/Professional/random-app-generator/src/component/RandomQuoteMachine.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RandomQuoteMachine = () => {\n  _s();\n  const [quote, setQuote] = useState('');\n  const [author, setAuthor] = useState('');\n  useEffect(() => {\n    fetchQuote();\n  }, []);\n  const fetchQuote = async () => {\n    try {\n      const response = await axios.get('https://api.quotable.io/random');\n      const {\n        content,\n        author\n      } = response.data;\n      setQuote(content);\n      setAuthor(author);\n    } catch (error) {\n      console.error('Error fetching quote:', error);\n    }\n  };\n  const handleNewQuote = () => {\n    fetchQuote();\n  };\n  const handleTweet = () => {\n    const tweetText = encodeURIComponent(`\"${quote}\" - ${author}`);\n    const tweetUrl = `https://twitter.com/intent/tweet?text=${tweetText}`;\n    window.open(tweetUrl, '_blank');\n  };\n  const renderContent = () => {\n    if (!author && !quote) {\n      alert('it is working');\n      /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"quote-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"text\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\\"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 24\n          }, this), quote]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"author\",\n          children: [\"- \", author]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"div--action\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"new-quote\",\n            onClick: handleNewQuote,\n            children: \"New Quote\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            id: \"tweet-quote\",\n            href: \"#\",\n            onClick: handleTweet,\n            children: \"Tweet Quote\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }, this);\n    } else {\n      /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"errorBox\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"No Quote available now\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }, this);\n    }\n  };\n  return (\n    // <div id=\"quote-box\">\n    //   <div id=\"text\"><span>\"</span>{quote}</div>\n    //   <div id=\"author\">- {author}</div>\n    //   <div className='div--action'>\n    //     <button id=\"new-quote\" onClick={handleNewQuote}>New Quote</button>\n    //     <a id=\"tweet-quote\" href=\"#\" onClick={handleTweet}>Tweet Quote</a>\n    //   </div>\n    // </div>\n    renderContent()\n  );\n};\n_s(RandomQuoteMachine, \"uAT/nb434hxg5DOW/0KtafH4Yrk=\");\n_c = RandomQuoteMachine;\nexport default RandomQuoteMachine;\nvar _c;\n$RefreshReg$(_c, \"RandomQuoteMachine\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","RandomQuoteMachine","_s","quote","setQuote","author","setAuthor","fetchQuote","response","get","content","data","error","console","handleNewQuote","handleTweet","tweetText","encodeURIComponent","tweetUrl","window","open","renderContent","alert","id","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","href","_c","$RefreshReg$"],"sources":["/home/legend/Desktop/Projects/Professional/random-app-generator/src/component/RandomQuoteMachine.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst RandomQuoteMachine = () => {\n  const [quote, setQuote] = useState('');\n  const [author, setAuthor] = useState('');\n\n  useEffect(() => {\n    fetchQuote();\n  }, []);\n\n  const fetchQuote = async () => {\n    try {\n      const response = await axios.get('https://api.quotable.io/random');\n      const { content, author } = response.data;\n      setQuote(content);\n      setAuthor(author);\n    } catch (error) {\n      console.error('Error fetching quote:', error);\n    }\n  };\n\n  const handleNewQuote = () => {\n    fetchQuote();\n  };\n\n  const handleTweet = () => {\n    const tweetText = encodeURIComponent(`\"${quote}\" - ${author}`);\n    const tweetUrl = `https://twitter.com/intent/tweet?text=${tweetText}`;\n    window.open(tweetUrl, '_blank');\n  };\n\n  const renderContent = () => {\n    if (!author && !quote) {\n      alert('it is working');\n      <div id=\"quote-box\">\n        <div id=\"text\"><span>\"</span>{quote}</div>\n        <div id=\"author\">- {author}</div>\n        <div className='div--action'>\n          <button id=\"new-quote\" onClick={handleNewQuote}>New Quote</button>\n          <a id=\"tweet-quote\" href=\"#\" onClick={handleTweet}>Tweet Quote</a>\n        </div>\n      </div>\n    } else {\n      <div className='errorBox'>\n          <h1>No Quote available now</h1>\n      </div>\n    }\n  }\n\n  return (\n    // <div id=\"quote-box\">\n    //   <div id=\"text\"><span>\"</span>{quote}</div>\n    //   <div id=\"author\">- {author}</div>\n    //   <div className='div--action'>\n    //     <button id=\"new-quote\" onClick={handleNewQuote}>New Quote</button>\n    //     <a id=\"tweet-quote\" href=\"#\" onClick={handleTweet}>Tweet Quote</a>\n    //   </div>\n    // </div>\n    renderContent()\n  );\n};\n\nexport default RandomQuoteMachine;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}