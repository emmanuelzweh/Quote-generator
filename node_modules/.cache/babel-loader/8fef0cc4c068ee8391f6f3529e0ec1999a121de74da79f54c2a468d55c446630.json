{"ast":null,"code":"var _jsxFileName = \"/home/legend/Desktop/Projects/Professional/random-app-generator/src/component/RandomQuoteMachine.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RandomQuoteMachine = () => {\n  _s();\n  const [quote, setQuote] = useState('');\n  const [author, setAuthor] = useState('');\n  useEffect(() => {\n    fetchQuote();\n  }, []);\n  const fetchQuote = async () => {\n    try {\n      const response = await axios.get('https://api.quotable.io/random');\n      const {\n        content,\n        author\n      } = response.data;\n      setQuote(content);\n      setAuthor(author);\n    } catch (error) {\n      console.error('Error fetching quote:', error);\n    }\n  };\n  const handleNewQuote = () => {\n    fetchQuote();\n  };\n  const handleTweet = () => {\n    const tweetText = encodeURIComponent(`\"${quote}\" - ${author}`);\n    const tweetUrl = `https://twitter.com/intent/tweet?text=${tweetText}`;\n    window.open(tweetUrl, '_blank');\n  };\n  if (author && quote) {\n    /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"quote-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"text\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"\\\"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 22\n        }, this), quote]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"author\",\n        children: [\"- \", author]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"div--action\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"new-quote\",\n          onClick: handleNewQuote,\n          children: \"New Quote\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          id: \"tweet-quote\",\n          href: \"#\",\n          onClick: handleTweet,\n          children: \"Tweet Quote\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }, this);\n  } else {}\n  const renderContent = () => {\n    if (author) {} else {}\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"quote-box\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"text\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"\\\"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 22\n      }, this), quote]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"author\",\n      children: [\"- \", author]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"div--action\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"new-quote\",\n        onClick: handleNewQuote,\n        children: \"New Quote\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        id: \"tweet-quote\",\n        href: \"#\",\n        onClick: handleTweet,\n        children: \"Tweet Quote\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(RandomQuoteMachine, \"uAT/nb434hxg5DOW/0KtafH4Yrk=\");\n_c = RandomQuoteMachine;\nexport default RandomQuoteMachine;\nvar _c;\n$RefreshReg$(_c, \"RandomQuoteMachine\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","RandomQuoteMachine","_s","quote","setQuote","author","setAuthor","fetchQuote","response","get","content","data","error","console","handleNewQuote","handleTweet","tweetText","encodeURIComponent","tweetUrl","window","open","id","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","href","renderContent","_c","$RefreshReg$"],"sources":["/home/legend/Desktop/Projects/Professional/random-app-generator/src/component/RandomQuoteMachine.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst RandomQuoteMachine = () => {\n  const [quote, setQuote] = useState('');\n  const [author, setAuthor] = useState('');\n\n  useEffect(() => {\n    fetchQuote();\n  }, []);\n\n  const fetchQuote = async () => {\n    try {\n      const response = await axios.get('https://api.quotable.io/random');\n      const { content, author } = response.data;\n      setQuote(content);\n      setAuthor(author);\n    } catch (error) {\n      console.error('Error fetching quote:', error);\n    }\n  };\n\n  const handleNewQuote = () => {\n    fetchQuote();\n  };\n\n  const handleTweet = () => {\n    const tweetText = encodeURIComponent(`\"${quote}\" - ${author}`);\n    const tweetUrl = `https://twitter.com/intent/tweet?text=${tweetText}`;\n    window.open(tweetUrl, '_blank');\n  };\n\n  if (author && quote) {\n    <div id=\"quote-box\">\n      <div id=\"text\"><span>\"</span>{quote}</div>\n      <div id=\"author\">- {author}</div>\n      <div className='div--action'>\n        <button id=\"new-quote\" onClick={handleNewQuote}>New Quote</button>\n        <a id=\"tweet-quote\" href=\"#\" onClick={handleTweet}>Tweet Quote</a>\n      </div>\n    </div>\n  } else {\n    \n  }\n\n  const renderContent = () => {\n    if (author) {\n      \n    } else {\n      \n    }\n  }\n\n  return (\n    <div id=\"quote-box\">\n      <div id=\"text\"><span>\"</span>{quote}</div>\n      <div id=\"author\">- {author}</div>\n      <div className='div--action'>\n        <button id=\"new-quote\" onClick={handleNewQuote}>New Quote</button>\n        <a id=\"tweet-quote\" href=\"#\" onClick={handleTweet}>Tweet Quote</a>\n      </div>\n    </div>\n  );\n};\n\nexport default RandomQuoteMachine;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}