{"ast":null,"code":"var _jsxFileName = \"/home/legend/Desktop/Projects/Professional/random-app-generator/src/component/RandomQuoteMachine.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst RandomQuoteMachine = () => {\n  _s();\n  const [quote, setQuote] = useState('');\n  const [author, setAuthor] = useState('');\n  useEffect(() => {\n    fetchQuote();\n  }, []);\n  const fetchQuote = async () => {\n    try {\n      const response = await axios.get('https://api.quotable.io/random');\n      const {\n        content,\n        author\n      } = response.data;\n      setQuote(content);\n      setAuthor(author);\n    } catch (error) {\n      console.error('Error fetching quote:', error);\n    }\n  };\n  const handleNewQuote = () => {\n    fetchQuote();\n  };\n  const handleTweet = () => {\n    const tweetText = encodeURIComponent(`\"${quote}\" - ${author}`);\n    const tweetUrl = `https://twitter.com/intent/tweet?text=${tweetText}`;\n    window.open(tweetUrl, '_blank');\n  };\n  const testResult = () => {\n    if (author === '') {\n      /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"text\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\\"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 24\n          }, this), quote, \" \", testResult()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"author\",\n          children: [\"- \", author]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"div--action\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"new-quote\",\n            onClick: handleNewQuote,\n            children: \"New Quote\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            id: \"tweet-quote\",\n            href: \"#\",\n            onClick: handleTweet,\n            children: \"Tweet Quote\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true);\n    } else {\n      return something;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"quote-box\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"text\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"\\\"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 22\n      }, this), quote, \" \", testResult()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"author\",\n      children: [\"- \", author]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"div--action\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"new-quote\",\n        onClick: handleNewQuote,\n        children: \"New Quote\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        id: \"tweet-quote\",\n        href: \"#\",\n        onClick: handleTweet,\n        children: \"Tweet Quote\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(RandomQuoteMachine, \"uAT/nb434hxg5DOW/0KtafH4Yrk=\");\n_c = RandomQuoteMachine;\nexport default RandomQuoteMachine;\nvar _c;\n$RefreshReg$(_c, \"RandomQuoteMachine\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","RandomQuoteMachine","_s","quote","setQuote","author","setAuthor","fetchQuote","response","get","content","data","error","console","handleNewQuote","handleTweet","tweetText","encodeURIComponent","tweetUrl","window","open","testResult","children","id","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","href","something","_c","$RefreshReg$"],"sources":["/home/legend/Desktop/Projects/Professional/random-app-generator/src/component/RandomQuoteMachine.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst RandomQuoteMachine = () => {\n  const [quote, setQuote] = useState('');\n  const [author, setAuthor] = useState('');\n\n  useEffect(() => {\n    fetchQuote();\n  }, []);\n\n  const fetchQuote = async () => {\n    try {\n      const response = await axios.get('https://api.quotable.io/random');\n      const { content, author } = response.data;\n      setQuote(content);\n      setAuthor(author);\n    } catch (error) {\n      console.error('Error fetching quote:', error);\n    }\n  };\n\n  const handleNewQuote = () => {\n    fetchQuote();\n  };\n\n  const handleTweet = () => {\n    const tweetText = encodeURIComponent(`\"${quote}\" - ${author}`);\n    const tweetUrl = `https://twitter.com/intent/tweet?text=${tweetText}`;\n    window.open(tweetUrl, '_blank');\n  };\n\n  const testResult = () => {\n    if (author === '') {\n      <>\n        <div id=\"text\"><span>\"</span>{quote} {testResult()}</div>\n        <div id=\"author\">- {author}</div>\n        <div className='div--action'>\n          <button id=\"new-quote\" onClick={handleNewQuote}>New Quote</button>\n          <a id=\"tweet-quote\" href=\"#\" onClick={handleTweet}>Tweet Quote</a>\n        </div>\n      </>\n    } else {\n      return something\n    }\n  }\n\n  return (\n    <div id=\"quote-box\">\n      <div id=\"text\"><span>\"</span>{quote} {testResult()}</div>\n      <div id=\"author\">- {author}</div>\n      <div className='div--action'>\n        <button id=\"new-quote\" onClick={handleNewQuote}>New Quote</button>\n        <a id=\"tweet-quote\" href=\"#\" onClick={handleTweet}>Tweet Quote</a>\n      </div>\n    </div>\n  );\n};\n\nexport default RandomQuoteMachine;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}